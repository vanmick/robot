{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgedion/Documents/Javascript course/robofriends/robot/src/Card.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc bg-dark-blue moon-gray dib br3 pa3 ma2 grow bw2 shadow\",\n    id: props.id,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://robohash.org/angel?200x200\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"props.name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"propos.email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Card","props","className","id","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelgedion/Documents/Javascript course/robofriends/robot/src/Card.js"],"sourcesContent":["import React from \"react\";\n\nconst Card = (props) => {\n    return (\n        <div className=\"tc bg-dark-blue moon-gray dib br3 pa3 ma2 grow bw2 shadow\" id={props.id}>\n            <img src=\"https://robohash.org/angel?200x200\" alt=\"\" />\n            <div>\n                <h1>props.name</h1>\n                <p>propos.email</p>\n            </div>       \n        </div>\n    );\n}\n export default Card;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACpB,oBACIF,OAAA;IAAKG,SAAS,EAAC,2DAA2D;IAACC,EAAE,EAAEF,KAAK,CAACE,EAAG;IAAAC,QAAA,gBACpFL,OAAA;MAAKM,GAAG,EAAC,oCAAoC;MAACC,GAAG,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDX,OAAA;MAAAK,QAAA,gBACIL,OAAA;QAAAK,QAAA,EAAI;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBX,OAAA;QAAAK,QAAA,EAAG;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAC,EAAA,GAVKX,IAAI;AAWT,eAAeA,IAAI;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}